@model Assignment2.ViewModels.ProductIndexViewModel
@using PagedList.Mvc
@{
    ViewBag.Title = "Products";
}
@Styles.Render("~/Content/myCSS/ProductIndex.css")

<h2>@Html.DisplayFor(vm => vm.Category)</h2>
<p>

    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " +Model.Search + " found") @Model.Products.TotalItemCount products
    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <label>Filter by category:</label>
        @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All");
        <label>Sort By:</label>
        @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
        <input type="submit" value="Filter" />
        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }
</p>
<div class="list-group">
    <ul>
        @foreach (var item in Model.Products)
        {
            <li>
                <a href="@Url.Action( "Details","Products", new { id = item.ID }) ">
                    <div class="card-group">
                        <div class="card-img">
                            <img src="@Html.DisplayFor(modelItem => item.img)/image1.jpg" alt="@Html.DisplayFor(modelItem => item.img)" />
                        </div>
                        <div class="card-img-bottom">
                            <p class="card-img-bottom-name">@Html.DisplayFor(modelItem => item.Category.Name)</p>
                            <h5>@Html.DisplayFor(modelItem => item.Name)</h5>
                        </div>
                        <div class="card-footer">
                            <p class="card-footer-price">$@Html.DisplayFor(modelItem => item.Price)</p>
                            <button class="btn btn-outline-primary">More Details</button>
                        </div>
                    </div>
                </a>
            </li>
        }
    </ul>
</div>
<div>
    Page @(Model.Products.PageCount < Model.Products.PageNumber ? 0 :
Model.Products.PageNumber) of @Model.Products.PageCount
@Html.PagedListPager(Model.Products, page => Url.Action("Index", new
{
category = @Model.Category,
Search = @Model.Search,
sortBy = @Model.SortBy,
page
}))
</div>